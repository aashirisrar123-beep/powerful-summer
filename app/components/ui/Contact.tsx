\"use client\";\n\nimport React, { useState, FormEvent } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { MailIcon, UserIcon, PhoneIcon } from 'lucide-react';\n\nconst Contact: React.FC = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const [errors, setErrors] = useState<{ [key: string]: string }>({});\n  const [submissionStatus, setSubmissionStatus] = useState<'idle' | 'submitting' | 'success' | 'error'>('idle');\n\n  const validateForm = (): boolean => {\n    const newErrors: { [key: string]: string } = {};\n    if (!name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n    if (!email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\S+@\S+\.\S+/.test(email)) {\n      newErrors.email = 'Email address is invalid';\n    }\n    if (!message.trim()) {\n      newErrors.message = 'Message is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (validateForm()) {\n      setSubmissionStatus('submitting');\n      // Replace with your actual form submission logic (e.g., using Netlify Forms, Formspree, or a custom API endpoint)\n      try {\n        // Example: Simulating a network request\n        await new Promise(resolve => setTimeout(resolve, 2000)); \n        console.log('Form submitted successfully:', { name, email, subject, message });\n        setSubmissionStatus('success');\n        // Reset form fields after successful submission\n        setName('');\n        setEmail('');\n        setSubject('');\n        setMessage('');\n        setTimeout(() => setSubmissionStatus('idle'), 5000);\n      } catch (error) {\n        console.error('Form submission error:', error);\n        setSubmissionStatus('error');\n        setTimeout(() => setSubmissionStatus('idle'), 5000);\n      }\n    }\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-16 px-4 bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100\">\n      <div className=\"container mx-auto text-center\">\n        <h2 className=\"text-4xl font-bold mb-8 text-gray-900 dark:text-white\">Get In Touch</h2>\n        <div className=\"max-w-2xl mx-auto bg-gray-50 dark:bg-gray-800 shadow-lg rounded-lg p-8\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <Label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Name\n                </Label>\n                <div className=\"relative\">\n                  <UserIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-500 dark:text-gray-400\" />\n                  <Input \n                    id=\"name\" \n                    type=\"text\" \n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    placeholder=\"Your Name\"\n                    className=\"pl-10\"\n                    aria-invalid={errors.name ? \"true\" : \"false\"}\n                  />\n                </div>\n                {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\n              </div>\n              <div>\n                <Label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Email\n                </Label>\n                <div className=\"relative\">\n                  <MailIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-500 dark:text-gray-400\" />\n                  <Input \n                    id=\"email\" \n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"your.email@example.com\"\n                    className=\"pl-10\"\n                    aria-invalid={errors.email ? \"true\" : \"false\"}\n                  />\n                </div>\n                {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\n              </div>\n            </div>\n            <div>\n              <Label htmlFor=\"subject\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Subject\n              </Label>\n              <Input \n                id=\"subject\" \n                type=\"text\" \n                value={subject}\n                onChange={(e) => setSubject(e.target.value)}\n                placeholder=\"Subject of your message\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Message\n              </Label>\n              <Textarea \n                id=\"message\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                placeholder=\"Your message here...\"\n                rows={6}\n                aria-invalid={errors.message ? \"true\" : \"false\"}\n              />\n              {errors.message && <p className=\"text-red-500 text-sm mt-1\">{errors.message}</p>}\n            </div>\n            \n            <Button \n              type=\"submit\" \n              className=\"w-full py-3 px-4 text-lg shadow-md\"\n              disabled={submissionStatus === 'submitting'}\n            >\n              {submissionStatus === 'submitting' ? 'Sending...' : 'Send Message'}\n            </Button>\n            \n            {submissionStatus === 'success' && (\n              <p className=\"text-green-500 text-center\">Message sent successfully!</p>\n            )}\n            {submissionStatus === 'error' && (\n              <p className=\"text-red-500 text-center\">Failed to send message. Please try again.</p>\n            )}\n          </form>\n        </div>\n        <div className=\"mt-8 text-center\">\n          <p className=\"text-lg text-gray-700 dark:text-gray-300 mb-4\">Or connect with me on:</p>\n          <div className=\"flex justify-center items-center gap-4\">\n            <a href=\"mailto:your.email@example.com\" className=\"text-purple-600 hover:underline flex items-center gap-1\">\n              <MailIcon className=\"h-6 w-6\" /> Email\n            </a>\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-gray-700 hover:underline flex items-center gap-1 dark:text-gray-300\">\n              <UserIcon className=\"h-6 w-6\" /> LinkedIn\n            </a>\n            {/* Add other social links as needed */}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n